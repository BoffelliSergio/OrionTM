//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.42000
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Este código-fonte foi gerado automaticamente por Microsoft.VSDesigner, Versão 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace OrionTMClient.WSOrion {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="MainServerOrionTMSoap", Namespace="http://tempuri.org/")]
    public partial class MainServerOrionTM : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback MessengerOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerificaTaskJSOperationCompleted;
        
        private System.Threading.SendOrPostCallback RecebeHeartBeatJSOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public MainServerOrionTM() {
            this.Url = global::OrionTMClient.Properties.Settings.Default.OrionTMClient_WSOrion_MainServerOrionTM;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event MessengerCompletedEventHandler MessengerCompleted;
        
        /// <remarks/>
        public event VerificaTaskJSCompletedEventHandler VerificaTaskJSCompleted;
        
        /// <remarks/>
        public event RecebeHeartBeatJSCompletedEventHandler RecebeHeartBeatJSCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Messenger", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Messenger(string pastrMsg) {
            object[] results = this.Invoke("Messenger", new object[] {
                        pastrMsg});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MessengerAsync(string pastrMsg) {
            this.MessengerAsync(pastrMsg, null);
        }
        
        /// <remarks/>
        public void MessengerAsync(string pastrMsg, object userState) {
            if ((this.MessengerOperationCompleted == null)) {
                this.MessengerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMessengerOperationCompleted);
            }
            this.InvokeAsync("Messenger", new object[] {
                        pastrMsg}, this.MessengerOperationCompleted, userState);
        }
        
        private void OnMessengerOperationCompleted(object arg) {
            if ((this.MessengerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MessengerCompleted(this, new MessengerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/VerificaTaskJS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string VerificaTaskJS(string strIdEquipment, string strPublKey, string strPrivKey, string strTask) {
            object[] results = this.Invoke("VerificaTaskJS", new object[] {
                        strIdEquipment,
                        strPublKey,
                        strPrivKey,
                        strTask});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerificaTaskJSAsync(string strIdEquipment, string strPublKey, string strPrivKey, string strTask) {
            this.VerificaTaskJSAsync(strIdEquipment, strPublKey, strPrivKey, strTask, null);
        }
        
        /// <remarks/>
        public void VerificaTaskJSAsync(string strIdEquipment, string strPublKey, string strPrivKey, string strTask, object userState) {
            if ((this.VerificaTaskJSOperationCompleted == null)) {
                this.VerificaTaskJSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerificaTaskJSOperationCompleted);
            }
            this.InvokeAsync("VerificaTaskJS", new object[] {
                        strIdEquipment,
                        strPublKey,
                        strPrivKey,
                        strTask}, this.VerificaTaskJSOperationCompleted, userState);
        }
        
        private void OnVerificaTaskJSOperationCompleted(object arg) {
            if ((this.VerificaTaskJSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerificaTaskJSCompleted(this, new VerificaTaskJSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RecebeHeartBeatJS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RecebeHeartBeatJS(string strIdEquipment, string strVersion) {
            object[] results = this.Invoke("RecebeHeartBeatJS", new object[] {
                        strIdEquipment,
                        strVersion});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RecebeHeartBeatJSAsync(string strIdEquipment, string strVersion) {
            this.RecebeHeartBeatJSAsync(strIdEquipment, strVersion, null);
        }
        
        /// <remarks/>
        public void RecebeHeartBeatJSAsync(string strIdEquipment, string strVersion, object userState) {
            if ((this.RecebeHeartBeatJSOperationCompleted == null)) {
                this.RecebeHeartBeatJSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRecebeHeartBeatJSOperationCompleted);
            }
            this.InvokeAsync("RecebeHeartBeatJS", new object[] {
                        strIdEquipment,
                        strVersion}, this.RecebeHeartBeatJSOperationCompleted, userState);
        }
        
        private void OnRecebeHeartBeatJSOperationCompleted(object arg) {
            if ((this.RecebeHeartBeatJSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RecebeHeartBeatJSCompleted(this, new RecebeHeartBeatJSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void MessengerCompletedEventHandler(object sender, MessengerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MessengerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MessengerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void VerificaTaskJSCompletedEventHandler(object sender, VerificaTaskJSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerificaTaskJSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerificaTaskJSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void RecebeHeartBeatJSCompletedEventHandler(object sender, RecebeHeartBeatJSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RecebeHeartBeatJSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RecebeHeartBeatJSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591